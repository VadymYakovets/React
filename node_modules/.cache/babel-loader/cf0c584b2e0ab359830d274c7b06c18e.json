{"ast":null,"code":"import _objectSpread from \"/Users/Mishka/Documents/GitHub/GOIT_React/React_HW/react-hw-1/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Mishka/Documents/GitHub/GOIT_React/React_HW/react-hw-1/src/components/Stat/Stats.js\";\nimport React from 'react';\nimport StatsData from './StatsData';\nimport styles from './Stats.module.css';\n\nconst get_random_color = () => {\n  function c() {\n    var hex = Math.floor(Math.random() * 256).toString(16);\n    return ('0' + String(hex)).substr(-2); // pad with zero\n  }\n\n  return '#' + c() + c() + c();\n};\n\nconst Stats = props => React.createElement(\"div\", {\n  className: styles.statsContainer,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(\"section\", {\n  className: styles.statsSection,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"h2\", {\n  className: styles.title,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"Upload stats\"), React.createElement(\"ul\", {\n  className: styles.statlist,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, StatsData.map(el => {\n  return React.createElement(\"li\", {\n    className: styles.item,\n    key: el.id,\n    style: _objectSpread({}, buttonStyles, {\n      backgroundColor: disabled ? '#0000001f' : '#2196f3',\n      color: disabled ? '#00000042' : '#ffffff'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, el.label), React.createElement(\"span\", {\n    className: styles.percentage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, el.percentage));\n}))));\n\nexport default Stats;","map":{"version":3,"sources":["/Users/Mishka/Documents/GitHub/GOIT_React/React_HW/react-hw-1/src/components/Stat/Stats.js"],"names":["React","StatsData","styles","get_random_color","c","hex","Math","floor","random","toString","String","substr","Stats","props","statsContainer","statsSection","title","statlist","map","el","item","id","buttonStyles","backgroundColor","disabled","color","label","percentage"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC9B,WAASC,CAAT,GAAa;AACZ,QAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,EAAgCC,QAAhC,CAAyC,EAAzC,CAAV;AACA,WAAO,CAAC,MAAMC,MAAM,CAACL,GAAD,CAAb,EAAoBM,MAApB,CAA2B,CAAC,CAA5B,CAAP,CAFY,CAE2B;AACvC;;AACD,SAAO,MAAMP,CAAC,EAAP,GAAYA,CAAC,EAAb,GAAkBA,CAAC,EAA1B;AACA,CAND;;AAQA,MAAMQ,KAAK,GAAIC,KAAD,IACb;AAAK,EAAA,SAAS,EAAEX,MAAM,CAACY,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAS,EAAA,SAAS,EAAEZ,MAAM,CAACa,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAI,EAAA,SAAS,EAAEb,MAAM,CAACc,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,EAGC;AAAI,EAAA,SAAS,EAAEd,MAAM,CAACe,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACEhB,SAAS,CAACiB,GAAV,CAAeC,EAAD,IAAQ;AACtB,SACC;AACC,IAAA,SAAS,EAAEjB,MAAM,CAACkB,IADnB;AAEC,IAAA,GAAG,EAAED,EAAE,CAACE,EAFT;AAGC,IAAA,KAAK,oBACDC,YADC;AAEJC,MAAAA,eAAe,EAAEC,QAAQ,GAAG,WAAH,GAAiB,SAFtC;AAGJC,MAAAA,KAAK,EAAED,QAAQ,GAAG,WAAH,GAAiB;AAH5B,MAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQC;AAAM,IAAA,SAAS,EAAEtB,MAAM,CAACwB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCP,EAAE,CAACO,KAAnC,CARD,EASC;AAAM,IAAA,SAAS,EAAExB,MAAM,CAACyB,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCR,EAAE,CAACQ,UAAxC,CATD,CADD;AAaA,CAdA,CADF,CAHD,CADD,CADD;;AA0BA,eAAef,KAAf","sourcesContent":["import React from 'react';\nimport StatsData from './StatsData';\nimport styles from './Stats.module.css';\n\nconst get_random_color = () => {\n\tfunction c() {\n\t\tvar hex = Math.floor(Math.random() * 256).toString(16);\n\t\treturn ('0' + String(hex)).substr(-2); // pad with zero\n\t}\n\treturn '#' + c() + c() + c();\n};\n\nconst Stats = (props) => (\n\t<div className={styles.statsContainer}>\n\t\t<section className={styles.statsSection}>\n\t\t\t<h2 className={styles.title}>Upload stats</h2>\n\n\t\t\t<ul className={styles.statlist}>\n\t\t\t\t{StatsData.map((el) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclassName={styles.item}\n\t\t\t\t\t\t\tkey={el.id}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t...buttonStyles,\n\t\t\t\t\t\t\t\tbackgroundColor: disabled ? '#0000001f' : '#2196f3',\n\t\t\t\t\t\t\t\tcolor: disabled ? '#00000042' : '#ffffff',\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<span className={styles.label}>{el.label}</span>\n\t\t\t\t\t\t\t<span className={styles.percentage}>{el.percentage}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</section>\n\t</div>\n);\n\nexport default Stats;\n"]},"metadata":{},"sourceType":"module"}